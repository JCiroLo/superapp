div
  Tabs(:tabs="projectTabs" vertical)
    template(#slot_0)
      .custom-card
        .custom-card-image
          .project-image(:style="{backgroundImage: `url('${currentProjectImage}')`}" alt="alt")
            h1 {{currentProject.nombre}}
            small ({{currentProject.activo ? 'Activo' : 'Inactivo'}})
            .project-statistics
              .project-statistic.project-views
                i.fas.fa-eye
                span {{currentProjectStatistics.visualizaciones}}
              .project-statistic.project-likes
                i.fas.fa-thumbs-up
                span {{currentProjectStatistics.likes}}
              .project-statistic.project-dislikes
                i.fas.fa-thumbs-down
                span {{currentProjectStatistics.dislikes}}
        .custom-card-body
          .project-summary
            h3 Descripción
            p {{currentProject.descripcion}}
            h3 Resumen
            p {{currentProject.resumen}}
            h3 Palabras clave
            .project-list
              .item(v-for="(item, index) in currentProject.palabrasClave" :key="index") 
                i.fas.fa-circle
                | {{item}} 
            h3 Cronograma
            .project-list
              .item(v-for="(item, index) in currentProject.cronograma" :key="index") 
                b {{index + 1}}. 
                | {{item}}
            h3 Objetivos
            .project-list
              .item(v-for="(item, index) in currentProject.objetivos" :key="index") 
                b {{index + 1}}. 
                | {{item}}
            h3 Hitos
            .project-list
              .item(v-for="(item, index) in currentProject.hitos" :key="index") 
                b {{index + 1}}. 
                | {{keyword}}
            h3 Fecha: 
            p {{formatStringDate(currentProject.fechaLanzamiento)}}
            h3 Localización: 
            p {{currentProject.ubicacion[0]}} {{currentProject.ubicacion[1]}}
            h3 Presupuesto: 
            p {{formatCurrency(currentProject.presupuesto)}}

    template(#slot_1)
      .custom-card
        .custom-card-body
          .project-gamification
            h3 Título
            p {{currentProjectGamitfication.titulo}}
            h3 Fecha de terminación
            p {{formatStringDate(currentProjectGamitfication.fechaTerminacion)}}
            h3 Términos y condiciones
            p {{currentProjectGamitfication.tyc}}
            h3 Mensaje de participación
            p {{currentProjectGamitfication.mensajeParticipacion}}
            h3 Mensaje de ganador
            p {{currentProjectGamitfication.mensajeGanador}}
            h3 Habilitado
            ToggleButton.toggle-green(v-model="currentProjectGamitfication.habilitado")
              template(#label="{ checked, classList }")
                strong(:class="classList.label") {{ checked ? 'Si' : 'No' }}
            h3 Patrocinadores
            .project-list
              .item(v-for="(item, index) in currentProjectGamitfication.patrocinadores" :key="index") 
                i.fas.fa-circle
                |  {{item}} 
            h3 Premios
            .project-list
              .item(v-for="(item, index) in currentProjectGamitfication.premios" :key="index") 
                i.fas.fa-circle
                |  {{item}} 
            h3 Participantes
            .project-list
              .item(v-for="(item, index) in currentProjectGamitfication.usuariosParticipantes" :key="index") 
                i.fas.fa-circle
                |  {{item}} 
            h3 Ganadores
            .project-list
              .item(v-for="(item, index) in currentProjectGamitfication.usuariosGanadores" :key="index") 
                i.fas.fa-circle
                |  {{item}} 

    template(#slot_2)
      button.btn-float.btn.btn-main(@click="() => { actions.question = 'create'; modal.createQuestion = true; }")
        i.fal.fa-plus.fa-fw
        span Nueva pregunta
      .custom-card
        .custom-card-body
          .no-questions-found(v-if="rankingQuestions.length === 0 && hundredDollarsQuestions.length === 0 && kanoModelQuestions.length === 0 && likertQuestions.length === 0")
            img(:src="require('../../assets/img/not-found.png')")
            h3 Sin preguntas
          .project-questions(v-else)
            template(v-if="rankingQuestions.length > 0")
              .project-questions-type
                h2 Ranking
              ProjectQuestion(v-for="(question, index) in rankingQuestions" :key="index" :question="question" @updateQuestion="(q) => {newQuestion = question; actions.question = 'update'; modal.createQuestion = true;}")
            template(v-if="hundredDollarsQuestions.length > 0")
              .project-questions-type
                h2 $100
              ProjectQuestion(v-for="(question, index) in hundredDollarsQuestions" :key="index" :question="question" @updateQuestion="(q) => {newQuestion = question; actions.question = 'update'; modal.createQuestion = true;}")
            template(v-if="kanoModelQuestions.length > 0")
              .project-questions-type
                h2 Kano
              ProjectQuestion(v-for="(question, index) in kanoModelQuestions" :key="index" :question="question" @updateQuestion="(q) => {newQuestion = question; actions.question = 'update'; modal.createQuestion = true;}")
            template(v-if="likertQuestions.length > 0")
              .project-questions-type
                h2 Likert
              ProjectQuestion(v-for="(question, index) in likertQuestions" :key="index" :question="question" @updateQuestion="(q) => {newQuestion = question; actions.question = 'update'; modal.createQuestion = true;}")

    template(#slot_3)
      button.btn-float.btn.btn-main(@click="modal.createComment = !modal.createComment")
        i.fal.fa-plus.fa-fw
        span Nuevo comentario
      .custom-card
        .custom-card-body
          .no-comments-found(v-if="projectComments.length === 0")
            img(:src="require('../../assets/img/not-found.png')")
            h3 Sin comentarios
          .project-comments(v-else)
            .project-comment(v-for="(comment, index) in projectComments" :key="index")
              .project-comment-header
                .project-comment-user {{!comment.anonimo ? comment.username : 'Anónimo'}}
                .project-comment-date {{formatSlashedDate(comment.fecha)}}
              .project-comment-content {{comment.comentario}}
              .project-comment-actions
                button.btn.btn-icon(@click="deleteComment(comment)"): i.fas.fa-trash.fa-fw    

  Modal(:show="modal.createQuestion" @closeModal="modal.createQuestion = false")
    template(#modal-header)
      h4.m-0: b {{actions.question === 'create' ? 'Nueva' : 'Editar'}} pregunta
    template(#modal-body)
      form.app-form(noValidate @submit.prevent="addQuestion")
        .form-field
          label Tipo de pregunta
          br
          select.w-100(v-model="newQuestion.tipoConsulta")
            option(value="1") Ranking
            option(value="2") $100
            option(value="6") Kano Model
            option(value="7") Likert
        .form-field
          input(type="number" placeholder="Número de pregunta" v-model="newQuestion.numeroPregunta")
        .form-field
          input(type="text" placeholder="Pregunta" v-model="newQuestion.pregunta")
        .form-field
          input(type="text" placeholder="Información" v-model="newQuestion.informacion")
        .form-field
          input(type="text" placeholder="Priorización" v-model="newQuestion.priorizacion")
        .form-field
          label Opciones
          ListInput(
            type="text"
            placeholder="Nueva opción"
            :list="newQuestion.opciones" 
            :ordered="newQuestion.tipoConsulta === '3'"
            @addElement="(element) => newQuestion.opciones.push(element)"
            @removeElement="(index) => newQuestion.opciones.splice(index, 1)" 
          )
        .form-field
          label Impacto
          ListInput(
            type="text"
            placeholder="Nuevo impacto"
            :list="newQuestion.impacto"
            @addElement="(element) => newQuestion.impacto.push(element)"
            @removeElement="(index) => newQuestion.impacto.splice(index, 1)" 
          )
        .form-field.d-flex.flex-column
          label Obligatorio 
          ToggleButton.toggle-green(v-model="newQuestion.obligatorio")
            template(#label="{ checked, classList }")
              strong(:class="classList.label") {{ checked ? 'Si' : 'No' }}
    template(#modal-footer)
      .d-flex.justify-content-end
        button.btn.btn-main-outline(@click="modal.createQuestion = false") Cancelar
        button.btn.btn-main.ms-3(@click="addQuestion") {{ actions.question === 'create' ? 'Crear' : 'Editar'}}

  Modal(:show="modal.createComment" @closeModal="modal.createComment = false")
    template(#modal-header)
      h4.m-0: b Nuevo comentario
    template(#modal-body)
      form.app-form(noValidate @submit.prevent="addComment")
        .form-field
          textarea.w-100(rows="6" placeholder="Comentario" v-model="newComment.comentario")
        .form-field
          label Anónimo
          br
          ToggleButton.toggle-green(v-model="newComment.anonimo")
            template(#label="{ checked, classList }")
              strong(:class="classList.label") {{ checked ? 'Si' : 'No' }}
    template(#modal-footer)
      .d-flex.justify-content-end
        button.btn.btn-main-outline(@click="modal.createComment = false") Cancelar
        button.btn.btn-main.ms-3(@click="addComment") Crear
